<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.persistence.${className}Mapper">

	
    <resultMap type="${package}.domain.${className}Pojo" id="${classname}Map">
     #foreach($column in $columns)
        <result property="${column.attrname}" column="${column.columnName}"/>
     #end
    </resultMap>


  <sql id="Base_Column_List">
#foreach($column in $columns)
 ${column.columnName}#if($velocityCount != $columns.size()),#end
#end
  </sql>


	<select id="queryObject" resultType="${package}.domain.${className}Pojo" parameterType="java.lang.Integer">
		select 
		<include refid="Base_Column_List" /> 
		from ${tableName} where ${pk.columnName} = #{${pk.attrname}}
	</select>

	<select id="queryList"  resultMap="${classname}Map">
		select
		 <include refid="Base_Column_List" /> 
		from ${tableName}
        order by ${pk.columnName} desc
	</select>
	
 	<select id="queryTotal" resultType="java.lang.Integer">
		select count(*) from ${tableName} 
	</select>
	 
	<insert id="save" parameterType="${package}.domain.${className}Pojo"#if($pk.extra == 'auto_increment') useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
		insert into ${tableName}
		(
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
			`$column.columnName`#if($velocityCount != $columns.size()), #end

#end			
#end
		)
		values
		(
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
			#{$column.attrname}#if($velocityCount != $columns.size()), #end

#end			
#end
		)
	</insert>
	 
	<update id="update" parameterType="${package}.domain.${className}Pojo">
		update ${tableName} 
		<set>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
			<if test="$column.attrname != null">`$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()), #end</if>
#end
#end
		</set>
		where ${pk.columnName} = #{${pk.attrname}}
	</update>
	
	<delete id="delete">
		delete from ${tableName} where ${pk.columnName} = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from ${tableName} where ${pk.columnName} in 
		<foreach item="${pk.attrname}" collection="array" open="(" separator="," close=")">
			#{${pk.attrname}}
		</foreach>
	</delete>

</mapper>